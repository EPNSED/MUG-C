MugC v1.0
Please cite: 
Zhao, K., Wang, X., Wong, H. C., Wohlhueter, R., Kirberger, M. P., Chen, G. and Yang, J. J. (2012), Predicting Ca2+-binding sites using refined carbon clusters. Proteins, 80: 2666–2679. doi: 10.1002/prot.24149

THE BSD OPENSOURCE LICENSE

Copyright (c) 2013, Department of Mathematics and Statistics, Georgia State University.
Produced at the Georgia State University
Written by Kun Zhao and his colleagues, 
MugC, Version 1.0
by Kun Zhao
kenzhao100@hotmail.com


All rights reserved.
This file is part of MugC. Additional BSD Notice.
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 Redistributions of source code must retain the above copyright notice, this list of conditions and the disclaimer below.
 Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the disclaimer (as noted below) in the documentation and/or other materials provided with the distribution.
 Neither the name of the LLNS/LLNL nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL LAWRENCE LIVERMORE NATIONAL SECURITY, LLC, THE U.S. DEPARTMENT OF ENERGY OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

######################################################################

# Example of Running MugC:  
A Proper Usage example: java src/MUGC -i 4 -l 1.74 -u 4.9
-i GridInterval for moving the calcium center at the most suitable positions. Default=4
-l The lower limit of distance between carbon atoms and calcium center. Default=1.74
-u The upper limit of distance between carbon atoms and calcium center. Default=4.9

######################################################################

Installation Instructions 

The code has been tested on both Windows(MS-DOS) and Linux (CentOS) with Java Version 1.7. 

1) File Structure.

──MugC
   ├───inputdata
   ├───outputdata
   ├───predictionResults
   └───src
       ├───fileutil
       ├───filter
       ├───mugc
       ├───parsepdb
       │   └───mugcarbonlist
       └───utils

0) Please empty all previous results in the predictionResults folder.  
	   
1) Compile the source codes at the current MugC folder.  
javac src/MugC.java

2) Prepare load the PDB file into "inputdata" folder under the "MugC" folder. In an example come with this tool, "3CLN.pdb" is already in the inputdata folder.

3) Save the four-digit PDB ID into the "list.txt" file.  In the example come with this tool, "3CLN" is already in the list.txt file.

4) Run the algorithm (please pay attention to the capital letters in the command):
java src/MUGC

5) Output:
The prediction results are in "predictionResults" folder. 

You may find two files in the folder. (For example, 3CLN_site.pdb and 3CLN_site.txt).
1. the PDB file with the calcium position attached in the PDB file at the end (3CLN_site.pdb). It can be viewed by using pymol.
2. the predicted binding sites (3CLN_site.txt) with format as below:

>4     133 OD1    20 ASP  -14.164  53.143  31.684 1128  0.6     3.34    
       150 OD1    22 ASP  -14.164  53.143  31.684 1128  0.6     3.34    
       162 OD1    24 ASP  -14.164  53.143  31.684 1128  0.6     3.34    
       171 O      26 THR  -14.164  53.143  31.684 1128  0.6     3.34    
       213 OE1    31 GLU  -14.164  53.143  31.684 1128  0.6     3.34   
	   
It presents that with the calculated binding residues ASP 20,ASP 22, ASP 24, THR 26 and GLU 31, calcium ion can be positioned at the coordination (-14.164  53.143  31.684).  
